buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.github.tomtzook:castle:2.0.0-beta.3'
        classpath 'io.github.tomtzook:gradle-cmake:1.0.0'
    }
}

plugins {
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'io.github.tomtzook.gradle-cmake'
apply from: rootProject.file('extras.gradle')

machines.customMachines.register("windows-x86_x64") {
    it.toolchainFile.set(rootProject.file('platforms/x86_64-mingw-gcc.cmake'))
}
machines.customMachines.register("linux-gnueabihf-arm") {
    it.toolchainFile.set(rootProject.file('platforms/arm-linux-gnueabihf-gcc.cmake'))
}
machines.customMachines.register("linux-aarch64") {
    it.toolchainFile.set(rootProject.file('platforms/aarch64-linux-gnu-gcc.cmake'))
}

def compileMachineTargets = [machines.host]
compileMachineTargets.addAll(machines.customMachines)

cmake {
    targets {
        sdl_jni {
            cmakeLists.set(file('src/CMakeLists.txt'))
            targetMachines.addAll(compileMachineTargets)
        }
    }
}

tasks.clean.dependsOn tasks.cmakeClean
tasks.build.dependsOn tasks.cmakeBuild

publishing {
    repositories {
        maven {
            if (isReleaseBuild()) {
                name = 'NexusStaging'
                url = NEXUS_RELEASE_REPOSITORY_URL
            } else {
                name = 'NexusSnapshot'
                url = NEXUS_SNAPSHOT_REPOSITORY_URL
            }

            credentials {
                username getNexusUsername()
                password getNexusPassword()
            }
        }
    }
}

compileMachineTargets.each { machine ->
    def artifactTask = tasks.register("zipNative${machine.name}", Jar) {
        dependsOn(tasks.cmakeBuild)

        def outputDir = cmake.outputDir.dir("sdl_jni/${machine.name}")
        from outputDir.map {
            return it.asFileTree.matching {
                include '**/*.dll'
                include '**/*.so'
                exclude '**/CMakeFiles/**'
            }
        }

        archiveBaseName.set("${project.name}-jni-${machine.name}")
    }

    publishing {
        publications {
            "maven${machine.name}"(MavenPublication) {
                artifactId = "jsdl2-jni-${machine.name}"

                artifact artifactTask

                pom {
                    name = "jsdl2-jni-${machine.name}"
                    description = 'Java Bindings for SDL2 (JNI)'
                    url = 'https://github.com/tomtzook/jsdl2'

                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            url = ' http://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }

                    developers {
                        developer {
                            id = 'tomtzook'
                            name = 'Tom Tzook'
                            email = 'tomtzook@gmail.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/tomtzook/jsdl2.git'
                        developerConnection = 'scm:git:ssh://github.com/tomtzook/jsdl2.git'
                        url = 'https://github.com/tomtzook/jsdl2'
                    }
                }
            }
        }
    }

    if (shouldSign()) {
        signing {
            sign publishing.publications."maven${machine.name}"
        }
    }
}
